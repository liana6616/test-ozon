"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  default: () => VitePluginSvgSpritemap
});
module.exports = __toCommonJS(src_exports);

// src/plugins/build.ts
var import_node_path3 = require("path");

// src/svgManager.ts
var import_node_fs2 = require("fs");
var import_node_path2 = require("path");
var import_fast_glob = __toESM(require("fast-glob"), 1);
var import_svgo = require("svgo");
var import_xmldom = require("@xmldom/xmldom");
var import_hash_sum = __toESM(require("hash-sum"), 1);

// src/styles/styles.ts
var import_node_fs = require("fs");
var import_node_util = require("util");
var import_node_path = __toESM(require("path"), 1);
var import_mini_svg_data_uri = __toESM(require("mini-svg-data-uri"), 1);
var Styles = class {
  constructor(svgs, options) {
    this._svgs = /* @__PURE__ */ new Map();
    this._options = options;
    svgs.forEach((svg, name) => {
      const svgDataUri = (0, import_mini_svg_data_uri.default)(svg.source);
      this._svgs.set(name, {
        width: svg.width,
        height: svg.height,
        viewbox: svg.viewBox,
        svgDataUri
      });
    });
  }
  createSpriteMap(generator) {
    let spriteMap = "";
    let index = 1;
    this._svgs.forEach((svg, name) => {
      spriteMap += `${generator(name, svg, index === this._svgs.size)}
`;
      index++;
    });
    return spriteMap;
  }
  async insert(insert) {
    if (!this._options.styles)
      return "";
    const template = this._options.styles.lang === "css" ? "" : await (0, import_node_util.promisify)(import_node_fs.readFile)(
      import_node_path.default.join(__dirname, `/template.${this._options.styles.lang}`),
      "utf8"
    );
    const doNotEditThisFile = "/* Generated by vite-plugin-svg-spritemap */\n\n";
    return `${doNotEditThisFile + insert}
${template}`;
  }
  // SCSS generation
  _generate_scss() {
    let insert = `$sprites-prefix: '${this._options.prefix}';
`;
    insert += "$sprites: (\n";
    insert += this.createSpriteMap((name, svg, isLast) => {
      let sprites = "";
      sprites = `	'${name}': (`;
      sprites += `
		uri: "${svg.svgDataUri}",`;
      sprites += `
		width: ${svg.width}px,`;
      sprites += `
		height: ${svg.height}px`;
      sprites += `
	${!isLast ? ")," : ")"}`;
      return sprites;
    });
    insert += ");\n";
    return insert;
  }
  // Styl generation
  _generate_styl() {
    let insert = `$sprites-prefix = '${this._options.prefix}'
`;
    insert += "$sprites = {\n";
    insert += this.createSpriteMap((name, svg, isLast) => {
      let sprites = "";
      sprites = `	'${name}': {`;
      sprites += `
		uri: "${svg.svgDataUri}",`;
      sprites += `
		width: ${svg.width}px,`;
      sprites += `
		height: ${svg.height}px`;
      sprites += `
	${!isLast ? "}," : "}"}`;
      return sprites;
    });
    insert += "}\n";
    return insert;
  }
  // Less generation
  _generate_less() {
    let insert = `@sprites-prefix: '${this._options.prefix}';
`;
    insert += "@sprites: {\n";
    insert += this.createSpriteMap((name, svg) => {
      let sprites = "";
      sprites = `	@${name}: {`;
      sprites += `
		uri: "${svg.svgDataUri}";`;
      sprites += `
		width: ${svg.width}px;`;
      sprites += `
		height: ${svg.height}px;`;
      sprites += "\n	};";
      return sprites;
    });
    insert += "}\n";
    return insert;
  }
  // CSS generation
  _generate_css() {
    let insert = this.createSpriteMap((name, svg) => {
      const selector = `.${this._options.prefix}${name}`;
      let sprites = "";
      sprites = `${selector} {`;
      sprites += `
	background: url("${svg.svgDataUri}") center no-repeat;`;
      sprites += "\n}";
      return sprites;
    });
    insert += this.createSpriteMap((name, svg) => {
      const selector = `.${this._options.prefix}${name}-mask`;
      let sprites = "";
      sprites = `${selector} {`;
      sprites += `
	mask: url("${svg.svgDataUri}") center no-repeat;`;
      sprites += "\n}";
      return sprites;
    });
    if (this._options.output && this._options.output.view) {
      insert += this.createSpriteMap((name) => {
        const selector = `.${this._options.prefix}${name}-frag`;
        let sprites = "";
        sprites = `${selector} {`;
        sprites += `
	background: url('/__spritemap#${this._options.prefix + name}-view') center no-repeat;`;
        sprites += "\n}";
        return sprites;
      });
    }
    return insert;
  }
  async generate() {
    if (!this._options.styles)
      return "";
    let insert;
    switch (this._options.styles.lang) {
      case "scss":
        insert = this._generate_scss();
        break;
      case "styl":
        insert = this._generate_styl();
        break;
      case "less":
        insert = this._generate_less();
        break;
      case "css":
      default:
        insert = this._generate_css();
    }
    return await this.insert(insert);
  }
};

// src/helpers/calculateY.ts
function calculateY(heights = [], gutter = 0) {
  return heights.reduce((a, b) => a + b, 0) + heights.length * gutter;
}

// node_modules/.pnpm/svg-element-attributes@2.1.0/node_modules/svg-element-attributes/index.js
var svgElementAttributes = {
  "*": [
    "about",
    "class",
    "content",
    "datatype",
    "id",
    "lang",
    "property",
    "rel",
    "resource",
    "rev",
    "style",
    "tabindex",
    "typeof"
  ],
  a: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "download",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "href",
    "hreflang",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "ping",
    "pointer-events",
    "referrerpolicy",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "target",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "type",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  altGlyph: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "dx",
    "dy",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "format",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "glyphRef",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "rotate",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  altGlyphDef: [],
  altGlyphItem: [],
  animate: [
    "accumulate",
    "additive",
    "alignment-baseline",
    "attributeName",
    "attributeType",
    "baseline-shift",
    "begin",
    "by",
    "calcMode",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "dur",
    "enable-background",
    "end",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "from",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "href",
    "image-rendering",
    "kerning",
    "keySplines",
    "keyTimes",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "max",
    "min",
    "opacity",
    "overflow",
    "pointer-events",
    "repeatCount",
    "repeatDur",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "restart",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "to",
    "unicode-bidi",
    "values",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  animateColor: [
    "accumulate",
    "additive",
    "alignment-baseline",
    "attributeName",
    "attributeType",
    "baseline-shift",
    "begin",
    "by",
    "calcMode",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "dur",
    "enable-background",
    "end",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "from",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "keySplines",
    "keyTimes",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "max",
    "min",
    "opacity",
    "overflow",
    "pointer-events",
    "repeatCount",
    "repeatDur",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "restart",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "to",
    "unicode-bidi",
    "values",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  animateMotion: [
    "accumulate",
    "additive",
    "begin",
    "by",
    "calcMode",
    "dur",
    "end",
    "externalResourcesRequired",
    "fill",
    "from",
    "href",
    "keyPoints",
    "keySplines",
    "keyTimes",
    "max",
    "min",
    "origin",
    "path",
    "repeatCount",
    "repeatDur",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "restart",
    "rotate",
    "systemLanguage",
    "to",
    "values"
  ],
  animateTransform: [
    "accumulate",
    "additive",
    "attributeName",
    "attributeType",
    "begin",
    "by",
    "calcMode",
    "dur",
    "end",
    "externalResourcesRequired",
    "fill",
    "from",
    "href",
    "keySplines",
    "keyTimes",
    "max",
    "min",
    "repeatCount",
    "repeatDur",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "restart",
    "systemLanguage",
    "to",
    "type",
    "values"
  ],
  animation: [
    "begin",
    "dur",
    "end",
    "externalResourcesRequired",
    "fill",
    "focusHighlight",
    "focusable",
    "height",
    "initialVisibility",
    "max",
    "min",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "preserveAspectRatio",
    "repeatCount",
    "repeatDur",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "restart",
    "syncBehavior",
    "syncMaster",
    "syncTolerance",
    "systemLanguage",
    "transform",
    "width",
    "x",
    "y"
  ],
  audio: [
    "begin",
    "dur",
    "end",
    "externalResourcesRequired",
    "fill",
    "max",
    "min",
    "repeatCount",
    "repeatDur",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "restart",
    "syncBehavior",
    "syncMaster",
    "syncTolerance",
    "systemLanguage",
    "type"
  ],
  canvas: ["preserveAspectRatio", "requiredExtensions", "systemLanguage"],
  circle: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "cx",
    "cy",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pathLength",
    "pointer-events",
    "r",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  clipPath: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "clipPathUnits",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  "color-profile": ["local", "name", "rendering-intent"],
  cursor: [
    "externalResourcesRequired",
    "requiredExtensions",
    "requiredFeatures",
    "systemLanguage",
    "x",
    "y"
  ],
  defs: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  desc: [
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "systemLanguage"
  ],
  discard: [
    "begin",
    "href",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "systemLanguage"
  ],
  ellipse: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "cx",
    "cy",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pathLength",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "rx",
    "ry",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  feBlend: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "in",
    "in2",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "mode",
    "opacity",
    "overflow",
    "pointer-events",
    "result",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feColorMatrix: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "in",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "result",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "type",
    "unicode-bidi",
    "values",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feComponentTransfer: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "in",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "result",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feComposite: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "in",
    "in2",
    "k1",
    "k2",
    "k3",
    "k4",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "operator",
    "overflow",
    "pointer-events",
    "result",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feConvolveMatrix: [
    "alignment-baseline",
    "baseline-shift",
    "bias",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "divisor",
    "dominant-baseline",
    "edgeMode",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "in",
    "kernelMatrix",
    "kernelUnitLength",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "order",
    "overflow",
    "pointer-events",
    "preserveAlpha",
    "result",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "targetX",
    "targetY",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feDiffuseLighting: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "diffuseConstant",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "in",
    "kernelUnitLength",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "result",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "surfaceScale",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feDisplacementMap: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "in",
    "in2",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "result",
    "scale",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "xChannelSelector",
    "y",
    "yChannelSelector"
  ],
  feDistantLight: ["azimuth", "elevation"],
  feDropShadow: [
    "dx",
    "dy",
    "height",
    "in",
    "result",
    "stdDeviation",
    "width",
    "x",
    "y"
  ],
  feFlood: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "result",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feFuncA: [
    "amplitude",
    "exponent",
    "intercept",
    "offset",
    "slope",
    "tableValues",
    "type"
  ],
  feFuncB: [
    "amplitude",
    "exponent",
    "intercept",
    "offset",
    "slope",
    "tableValues",
    "type"
  ],
  feFuncG: [
    "amplitude",
    "exponent",
    "intercept",
    "offset",
    "slope",
    "tableValues",
    "type"
  ],
  feFuncR: [
    "amplitude",
    "exponent",
    "intercept",
    "offset",
    "slope",
    "tableValues",
    "type"
  ],
  feGaussianBlur: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "edgeMode",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "in",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "result",
    "shape-rendering",
    "stdDeviation",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feImage: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "crossorigin",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "href",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "preserveAspectRatio",
    "result",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feMerge: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "result",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feMergeNode: ["in"],
  feMorphology: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "in",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "operator",
    "overflow",
    "pointer-events",
    "radius",
    "result",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feOffset: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "dx",
    "dy",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "in",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "result",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  fePointLight: ["x", "y", "z"],
  feSpecularLighting: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "in",
    "kernelUnitLength",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "result",
    "shape-rendering",
    "specularConstant",
    "specularExponent",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "surfaceScale",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feSpotLight: [
    "limitingConeAngle",
    "pointsAtX",
    "pointsAtY",
    "pointsAtZ",
    "specularExponent",
    "x",
    "y",
    "z"
  ],
  feTile: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "in",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "result",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  feTurbulence: [
    "alignment-baseline",
    "baseFrequency",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "numOctaves",
    "opacity",
    "overflow",
    "pointer-events",
    "result",
    "seed",
    "shape-rendering",
    "stitchTiles",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "type",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  filter: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "filterRes",
    "filterUnits",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "primitiveUnits",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  font: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "horiz-adv-x",
    "horiz-origin-x",
    "horiz-origin-y",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "vert-adv-y",
    "vert-origin-x",
    "vert-origin-y",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  "font-face": [
    "accent-height",
    "alphabetic",
    "ascent",
    "bbox",
    "cap-height",
    "descent",
    "externalResourcesRequired",
    "font-family",
    "font-size",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "hanging",
    "ideographic",
    "mathematical",
    "overline-position",
    "overline-thickness",
    "panose-1",
    "slope",
    "stemh",
    "stemv",
    "strikethrough-position",
    "strikethrough-thickness",
    "underline-position",
    "underline-thickness",
    "unicode-range",
    "units-per-em",
    "v-alphabetic",
    "v-hanging",
    "v-ideographic",
    "v-mathematical",
    "widths",
    "x-height"
  ],
  "font-face-format": ["string"],
  "font-face-name": ["name"],
  "font-face-src": [],
  "font-face-uri": ["externalResourcesRequired"],
  foreignObject: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  g: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  glyph: [
    "alignment-baseline",
    "arabic-form",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "d",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-name",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "horiz-adv-x",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "orientation",
    "overflow",
    "pointer-events",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode",
    "unicode-bidi",
    "vert-adv-y",
    "vert-origin-x",
    "vert-origin-y",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  glyphRef: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "dx",
    "dy",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "format",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "glyphRef",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  handler: ["externalResourcesRequired", "type"],
  hkern: ["g1", "g2", "k", "u1", "u2"],
  iframe: ["requiredExtensions", "systemLanguage"],
  image: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "crossorigin",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "href",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pointer-events",
    "preserveAspectRatio",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "type",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  line: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pathLength",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode",
    "x1",
    "x2",
    "y1",
    "y2"
  ],
  linearGradient: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "gradientTransform",
    "gradientUnits",
    "href",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "shape-rendering",
    "spreadMethod",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode",
    "x1",
    "x2",
    "y1",
    "y2"
  ],
  listener: [
    "defaultAction",
    "event",
    "handler",
    "observer",
    "phase",
    "propagate",
    "target"
  ],
  marker: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "markerHeight",
    "markerUnits",
    "markerWidth",
    "mask",
    "opacity",
    "orient",
    "overflow",
    "pointer-events",
    "preserveAspectRatio",
    "refX",
    "refY",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "viewBox",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  mask: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "maskContentUnits",
    "maskUnits",
    "opacity",
    "overflow",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  metadata: [
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "systemLanguage"
  ],
  "missing-glyph": [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "d",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "horiz-adv-x",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "vert-adv-y",
    "vert-origin-x",
    "vert-origin-y",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  mpath: ["externalResourcesRequired", "href"],
  path: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "d",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pathLength",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  pattern: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "href",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "patternContentUnits",
    "patternTransform",
    "patternUnits",
    "pointer-events",
    "preserveAspectRatio",
    "requiredExtensions",
    "requiredFeatures",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "viewBox",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  polygon: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pathLength",
    "pointer-events",
    "points",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  polyline: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pathLength",
    "pointer-events",
    "points",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  prefetch: [
    "bandwidth",
    "mediaCharacterEncoding",
    "mediaContentEncodings",
    "mediaSize",
    "mediaTime"
  ],
  radialGradient: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "cx",
    "cy",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "fr",
    "fx",
    "fy",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "gradientTransform",
    "gradientUnits",
    "href",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "r",
    "shape-rendering",
    "spreadMethod",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  rect: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pathLength",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "rx",
    "ry",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  script: ["crossorigin", "externalResourcesRequired", "href", "type"],
  set: [
    "attributeName",
    "attributeType",
    "begin",
    "dur",
    "end",
    "externalResourcesRequired",
    "fill",
    "href",
    "max",
    "min",
    "repeatCount",
    "repeatDur",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "restart",
    "systemLanguage",
    "to"
  ],
  solidColor: [],
  stop: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "offset",
    "opacity",
    "overflow",
    "pointer-events",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  style: ["media", "title", "type"],
  svg: [
    "alignment-baseline",
    "baseProfile",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "contentScriptType",
    "contentStyleType",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "playbackOrder",
    "playbackorder",
    "pointer-events",
    "preserveAspectRatio",
    "requiredExtensions",
    "requiredFeatures",
    "shape-rendering",
    "snapshotTime",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "syncBehaviorDefault",
    "syncToleranceDefault",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "timelineBegin",
    "timelinebegin",
    "transform",
    "unicode-bidi",
    "version",
    "viewBox",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y",
    "zoomAndPan"
  ],
  switch: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  symbol: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "preserveAspectRatio",
    "refX",
    "refY",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "unicode-bidi",
    "viewBox",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  tbreak: [
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "systemLanguage"
  ],
  text: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "dx",
    "dy",
    "editable",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "lengthAdjust",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "rotate",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "textLength",
    "transform",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  textArea: [
    "editable",
    "focusHighlight",
    "focusable",
    "height",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "systemLanguage",
    "transform",
    "width",
    "x",
    "y"
  ],
  textPath: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "href",
    "image-rendering",
    "kerning",
    "lengthAdjust",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "method",
    "opacity",
    "overflow",
    "path",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "shape-rendering",
    "side",
    "spacing",
    "startOffset",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "textLength",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode"
  ],
  title: [
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "systemLanguage"
  ],
  tref: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "dx",
    "dy",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "lengthAdjust",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "opacity",
    "overflow",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "rotate",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "textLength",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  tspan: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "dx",
    "dy",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "image-rendering",
    "kerning",
    "lengthAdjust",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "rotate",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "textLength",
    "unicode-bidi",
    "visibility",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  unknown: ["requiredExtensions", "systemLanguage"],
  use: [
    "alignment-baseline",
    "baseline-shift",
    "clip",
    "clip-path",
    "clip-rule",
    "color",
    "color-interpolation",
    "color-interpolation-filters",
    "color-profile",
    "color-rendering",
    "cursor",
    "direction",
    "display",
    "dominant-baseline",
    "enable-background",
    "externalResourcesRequired",
    "fill",
    "fill-opacity",
    "fill-rule",
    "filter",
    "flood-color",
    "flood-opacity",
    "focusHighlight",
    "focusable",
    "font-family",
    "font-size",
    "font-size-adjust",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "height",
    "href",
    "image-rendering",
    "kerning",
    "letter-spacing",
    "lighting-color",
    "marker-end",
    "marker-mid",
    "marker-start",
    "mask",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "opacity",
    "overflow",
    "pointer-events",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "shape-rendering",
    "stop-color",
    "stop-opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "systemLanguage",
    "text-anchor",
    "text-decoration",
    "text-rendering",
    "transform",
    "unicode-bidi",
    "visibility",
    "width",
    "word-spacing",
    "writing-mode",
    "x",
    "y"
  ],
  video: [
    "begin",
    "dur",
    "end",
    "externalResourcesRequired",
    "fill",
    "focusHighlight",
    "focusable",
    "height",
    "initialVisibility",
    "max",
    "min",
    "nav-down",
    "nav-down-left",
    "nav-down-right",
    "nav-left",
    "nav-next",
    "nav-prev",
    "nav-right",
    "nav-up",
    "nav-up-left",
    "nav-up-right",
    "overlay",
    "preserveAspectRatio",
    "repeatCount",
    "repeatDur",
    "requiredExtensions",
    "requiredFeatures",
    "requiredFonts",
    "requiredFormats",
    "restart",
    "syncBehavior",
    "syncMaster",
    "syncTolerance",
    "systemLanguage",
    "transform",
    "transformBehavior",
    "type",
    "width",
    "x",
    "y"
  ],
  view: [
    "externalResourcesRequired",
    "preserveAspectRatio",
    "viewBox",
    "viewTarget",
    "zoomAndPan"
  ],
  vkern: ["g1", "g2", "k", "u1", "u2"]
};

// src/helpers/cleanAttributes.ts
function cleanAttributes(attributes, tag) {
  const cleanAttributes2 = ["viewbox", "width", "height", "id", "xmlns"];
  const validAttributes = [
    ...svgElementAttributes["*"],
    ...svgElementAttributes.svg.filter(
      (attr) => svgElementAttributes[tag].includes(attr)
    )
  ];
  return Array.from(attributes).filter(
    (attr) => !cleanAttributes2.includes(attr.name.toLocaleLowerCase()) && validAttributes.includes(attr.name)
  );
}

// src/svgManager.ts
var SVGManager = class {
  constructor(iconsPattern, options, config) {
    this.hash = null;
    this._parser = new import_xmldom.DOMParser();
    this._options = options;
    this._svgs = /* @__PURE__ */ new Map();
    this._iconsPattern = iconsPattern;
    this._config = config;
  }
  async update(filePath, loop = false) {
    const name = (0, import_node_path2.basename)(filePath, ".svg");
    if (!name)
      return false;
    let svg = await import_node_fs2.promises.readFile(filePath, "utf8");
    const document = this._parser.parseFromString(svg, "image/svg+xml");
    const documentElement = document.documentElement;
    let viewBox = (documentElement.getAttribute("viewBox") || documentElement.getAttribute("viewbox"))?.split(" ").map((a) => Number.parseFloat(a));
    const widthAttr = documentElement.getAttribute("width");
    const heightAttr = documentElement.getAttribute("height");
    let width = widthAttr ? Number.parseFloat(widthAttr) : void 0;
    let height = heightAttr ? Number.parseFloat(heightAttr) : void 0;
    if (viewBox && viewBox.length !== 4 && (!width || !height)) {
      this._config.logger.warn(`[vite-plugin-svg-spritemap] Sprite '${filePath}' is invalid, it's lacking both a viewBox and width/height attributes.`);
      return;
    }
    if (viewBox && viewBox.length !== 4 && width && height)
      viewBox = [0, 0, width, height];
    if (!width && viewBox)
      width = viewBox[2];
    if (!height && viewBox)
      height = viewBox[3];
    if (!width || !height || !viewBox)
      return;
    if (typeof this._options.svgo === "object") {
      const optimizedSvg = (0, import_svgo.optimize)(svg, this._options.svgo);
      if ("data" in optimizedSvg)
        svg = optimizedSvg.data;
    }
    this._svgs.set(name, {
      width,
      height,
      viewBox,
      filePath,
      source: svg
    });
    if (!loop) {
      this.hash = (0, import_hash_sum.default)(this.spritemap);
      await this.createFileStyle();
    }
  }
  async updateAll() {
    const iconsPath = await (0, import_fast_glob.default)(this._iconsPattern);
    for (let index = 0; index < iconsPath.length; index++) {
      const iconPath = iconsPath[index];
      await this.update(iconPath, true);
    }
    this.hash = (0, import_hash_sum.default)(this.spritemap);
    await this.createFileStyle();
  }
  get spritemap() {
    const DOM = new import_xmldom.DOMImplementation().createDocument(null, null, null);
    const Serializer = new import_xmldom.XMLSerializer();
    const spritemap = DOM.createElement("svg");
    spritemap.setAttribute("xmlns", "http://www.w3.org/2000/svg");
    if (this._options.output && this._options.output.use)
      spritemap.setAttribute("xmlns:xlink", "http://www.w3.org/1999/xlink");
    if (!this._svgs.size)
      return Serializer.serializeToString(spritemap);
    const sizes = {
      width: [],
      height: []
    };
    const parser = new import_xmldom.DOMParser();
    this._svgs.forEach((svg, name) => {
      const symbol = DOM.createElement("symbol");
      const document = parser.parseFromString(svg.source, "image/svg+xml");
      const documentElement = document.documentElement;
      let attributes = cleanAttributes(
        Array.from(documentElement.attributes),
        "symbol"
      );
      attributes.forEach((attr) => {
        if (attr.name.toLowerCase().startsWith("xmlns:"))
          spritemap.setAttribute(attr.name, attr.value);
      });
      attributes.forEach((attr) => {
        symbol.setAttribute(attr.name, attr.value);
      });
      symbol.setAttribute("id", this._options.idify(name, svg));
      symbol.setAttribute("viewBox", svg.viewBox.join(" "));
      Array.from(documentElement.childNodes).forEach((child) => {
        symbol.appendChild(child);
      });
      spritemap.appendChild(symbol);
      const y = calculateY(sizes.height);
      if (this._options.output && this._options.output.use) {
        const use = DOM.createElement("use");
        use.setAttribute("xlink:href", `#${this._options.prefix}${name}`);
        use.setAttribute("width", svg.width.toString());
        use.setAttribute("height", svg.height.toString());
        use.setAttribute("y", y.toString());
        spritemap.appendChild(use);
      }
      if (this._options.output && this._options.output.view) {
        const view = DOM.createElement("view");
        attributes = cleanAttributes(
          Array.from(documentElement.attributes),
          "view"
        );
        attributes.forEach((attr) => {
          view.setAttribute(attr.name, attr.value);
        });
        view.setAttribute("id", `${this._options.prefix + name}-view`);
        view.setAttribute(
          "viewBox",
          `0 ${Math.max(0, y)} ${svg.width} ${svg.height}`
        );
        spritemap.appendChild(view);
      }
      sizes.width.push(svg.width);
      sizes.height.push(svg.height);
    });
    return Serializer.serializeToString(spritemap);
  }
  async createFileStyle() {
    if (typeof this._options.styles !== "object")
      return;
    const styleGen = new Styles(this._svgs, this._options);
    const content = await styleGen.generate();
    const path3 = (0, import_node_path2.resolve)(this._config.root, this._options.styles.filename);
    await import_node_fs2.promises.writeFile(path3, content, "utf8");
  }
  get svgs() {
    return this._svgs;
  }
};

// src/helpers/filename.ts
var import_hash_sum2 = __toESM(require("hash-sum"), 1);
function getFileName(fileName, name, content, ext) {
  const hash = (0, import_hash_sum2.default)(content);
  fileName = fileName.replace(/\[hash\]/g, hash);
  fileName = fileName.replace(/\[ext\]/g, ext);
  fileName = fileName.replace(/\[extname\]/g, `.${ext}`);
  fileName = fileName.replace(/\[name\]/g, name);
  return fileName;
}

// src/plugins/build.ts
function BuildPlugin(iconsPattern, options) {
  let config;
  let fileRef;
  let fileName;
  let svgManager;
  const spritemapFilter = /\/__spritemap/g;
  const pluginExternal = /\/__spritemap/;
  return {
    name: "vite-plugin-svg-spritemap:build",
    apply: "build",
    config(config2) {
      const configExternal = config2.build?.rollupOptions?.external;
      let finalExternal = pluginExternal;
      if (Array.isArray(configExternal)) {
        configExternal.push(pluginExternal);
        finalExternal = configExternal;
      } else if (typeof configExternal === "string" || typeof configExternal === "object") {
        finalExternal = [configExternal, pluginExternal];
      } else if (typeof configExternal === "function") {
        finalExternal = (source, importer, isResolved) => {
          if (source.match(pluginExternal))
            return true;
          const res = configExternal(source, importer, isResolved);
          return res;
        };
      }
      return {
        build: {
          rollupOptions: {
            external: finalExternal
          }
        }
      };
    },
    configResolved(_config) {
      config = _config;
      svgManager = new SVGManager(iconsPattern, options, config);
    },
    async buildStart() {
      await svgManager.updateAll();
      if (typeof options.output === "object") {
        fileName = getFileName(
          options.output.filename,
          "spritemap",
          svgManager.spritemap,
          "svg"
        );
        const filePath = import_node_path3.posix.join(config.build.assetsDir, fileName);
        fileRef = this.emitFile({
          needsCodeReference: false,
          name: options.output.name,
          source: svgManager.spritemap,
          type: "asset",
          fileName: filePath
        });
      }
    },
    transform(code) {
      if (typeof options.output !== "object" || !spritemapFilter.test(code))
        return;
      const base = config.base.startsWith(".") ? config.base.substring(1) : config.base;
      return {
        code: code.replace(
          spritemapFilter,
          import_node_path3.posix.join(base, this.getFileName(fileRef))
        ),
        map: null
      };
    }
  };
}

// src/plugins/dev.ts
var import_fast_glob2 = __toESM(require("fast-glob"), 1);
var event = "vite-plugin-svg-spritemap:update";
function DevPlugin(iconsPattern, options) {
  const filterSVG = /\.svg$/;
  const filterCSS = /\.(s?css|styl|less)$/;
  const virtualModuleId = "/@vite-plugin-svg-spritemap/client";
  let svgManager;
  let config;
  return {
    name: "vite-plugin-svg-spritemap:dev",
    apply: "serve",
    configResolved(_config) {
      config = _config;
      svgManager = new SVGManager(iconsPattern, options, config);
    },
    resolveId(id) {
      if (id === virtualModuleId)
        return id;
    },
    load(id) {
      if (id === virtualModuleId)
        return generateHMR(svgManager.spritemap);
    },
    async buildStart() {
      await svgManager.updateAll();
      const icons = await (0, import_fast_glob2.default)(iconsPattern);
      const directories = /* @__PURE__ */ new Set();
      icons.forEach((icon) => {
        const directory = icon.split("/").slice(0, -1).join("/");
        directories.add(directory);
      });
      directories.forEach((directory) => this.addWatchFile(directory));
    },
    configureServer(server) {
      server.middlewares.use(async (req, res, next) => {
        if (req.url?.startsWith("/__spritemap")) {
          res.statusCode = 200;
          res.setHeader("Content-Type", "image/svg+xml");
          res.setHeader("Access-Control-Allow-Origin", "*");
          res.write(svgManager.spritemap, "utf-8");
          res.end();
        } else {
          next();
        }
      });
    },
    transformIndexHtml: {
      order: "pre",
      handler(html) {
        html = html.replace(
          /__spritemap-\d*|__spritemap/g,
          `__spritemap__${svgManager.hash}`
        );
        return html.replace(
          "</body>",
          `<script type="module" src="${virtualModuleId}"></script></body>`
        );
      }
    },
    async handleHotUpdate(ctx) {
      if (!ctx.file.match(filterSVG))
        return;
      await svgManager.update(ctx.file);
      ctx.server.ws.send({
        type: "custom",
        event,
        data: {
          id: svgManager.hash,
          spritemap: options.injectSVGOnDev ? svgManager.spritemap : ""
        }
      });
    },
    transform(code, id) {
      if (!id.match(filterCSS))
        return { code, map: null };
      return {
        code: code.replace(
          /__spritemap-\d*|__spritemap/g,
          `__spritemap__${svgManager.hash}`
        ),
        map: null
      };
    }
  };
  function generateHMR(spritemap) {
    const injectSvg = `
    const injectSvg = (data) => {
      const oldWrapper = document.getElementById('vite-plugin-svg-spritemap')
      if (oldWrapper)
        oldWrapper.remove()

      const wrapper = document.createElement('div')
      wrapper.innerHTML = data.spritemap
      wrapper.id = 'vite-plugin-svg-spritemap'
      wrapper.style.display = 'none'
      document.body.append(wrapper)
    }`;
    const updateElements = `
    const elements = document.querySelectorAll(
      '[src*=__spritemap], [href*=__spritemap], [*|href*=__spritemap]'
    )

    for (let i = 0; i < elements.length; i++) {
      const el = elements[i]
      const attributes = ['xlink:href', 'href', 'src']
      for (const attr of attributes) {
        if (!el.hasAttribute(attr)) continue
        const value = el.getAttribute(attr)
        if (!value) continue
        const newValue = value.replace(
          /__spritemap.*#/g,
          '__spritemap__' + data.id + '#'
        )
        el.setAttribute(attr, newValue)
      }
    }`;
    return `console.debug('[vite-plugin-svg-spritemap]', 'connected.')
      ${options.injectSVGOnDev ? injectSvg : ""}
      ${options.injectSVGOnDev ? `injectSvg(${JSON.stringify({ spritemap })})` : ""}
      if (import.meta.hot) {
        import.meta.hot.on('${event}', data => {
          console.debug('[vite-plugin-svg-spritemap]', 'update')
          ${updateElements}
          ${options.injectSVGOnDev ? "injectSvg(data)" : ""}
        })
      }`;
  }
}

// src/plugins/vue.ts
var import_node_path4 = require("path");
function VuePlugin(iconsPattern, options) {
  const filterVueComponent = /\.svg\?(use|view)?$/;
  let svgManager;
  let config;
  return {
    name: "vite-plugin-svg-spritemap:vue",
    enforce: "pre",
    configResolved(_config) {
      config = _config;
      if (config.plugins.findIndex((plugin) => plugin.name === "vite:vue") === -1 || !options.output)
        return;
      svgManager = new SVGManager(iconsPattern, options, config);
      svgManager.updateAll();
    },
    async load(id) {
      if (config.plugins.findIndex((plugin) => plugin.name === "vite:vue") === -1 || !options.output)
        return;
      if (!id.match(filterVueComponent))
        return;
      const [path3, query] = id.split("?", 2);
      const { name, base: filename } = (0, import_node_path4.parse)(path3);
      const svg = svgManager.svgs.get(name);
      let source = "";
      if (query === "view" && (options.output.view === false || options.output.use === false)) {
        config.logger.warn(`[vite-plugin-svg-spritemap] You need to enable the output.view and the output.use option to load ${id} as component with the ?view query.`);
      } else if (query === "view") {
        const width = svg?.width ? `width="${Math.ceil(svg.width)}"` : "";
        const height = svg?.width ? `height="${Math.ceil(svg.height)}"` : "";
        source = `<img src="/__spritemap#${options.prefix}${name}-view" ${[width, height].filter((item) => item.length > 0).join(" ")}/>`;
      } else {
        source = `<svg><slot/><use xlink:href="/__spritemap#${options.prefix}${name}"></use></svg>`;
      }
      const { compileTemplate } = await import("vue/compiler-sfc");
      const { code } = compileTemplate({
        id,
        source,
        filename,
        transformAssetUrls: false
      });
      return `${code}
export default { render: render }`;
    }
  };
}

// src/helpers/options.ts
function createOptions(options = {}) {
  let prefix = "sprite-";
  if (options.prefix === false)
    prefix = "";
  else if (typeof options.prefix === "string")
    prefix = options.prefix;
  let svgo = {
    plugins: [
      {
        name: "preset-default",
        params: {
          overrides: {
            removeViewBox: false,
            removeEmptyAttrs: false,
            moveGroupAttrsToElems: false,
            collapseGroups: false,
            cleanupIds: {
              preservePrefixes: [prefix]
            }
          }
        }
      }
    ]
  };
  if (typeof options.svgo === "object" || options.svgo === false)
    svgo = options.svgo;
  let styles = false;
  const stylesLang = ["css", "scss", "less", "styl"];
  if (typeof options.styles === "string") {
    let lang = options.styles.split(".").pop();
    const stylesLang2 = ["css", "scss", "less", "styl"];
    if (typeof lang === "undefined" || !stylesLang2.includes(lang)) {
      lang = "css";
      console.warn(
        "[vite-plugin-spritemap]",
        "Invalid styles lang, fallback to css"
      );
    }
    styles = {
      filename: options.styles,
      lang
    };
  } else if (typeof options.styles === "object" && typeof options.styles.filename === "string" && typeof options.styles.lang === "string" && stylesLang.includes(options.styles.lang)) {
    styles = {
      filename: options.styles.filename,
      lang: options.styles.lang
    };
  }
  let output = {
    filename: "[name].[hash][extname]",
    name: "spritemap.svg",
    use: true,
    view: true
  };
  if (options.output === false) {
    output = false;
  } else if (typeof options.output === "string") {
    output.filename = options.output;
  } else if (typeof options.output === "object") {
    output = {
      filename: options.output.filename || output.filename,
      name: options.output.name || output.name,
      use: typeof options.output.use !== "undefined" ? options.output.use : output.use,
      view: typeof options.output.view !== "undefined" ? options.output.view : output.view
    };
  }
  const injectSVGOnDev = options.injectSVGOnDev || false;
  let idify = (name) => prefix + name;
  if (typeof options.idify === "function")
    idify = options.idify;
  return {
    svgo,
    output,
    prefix,
    styles,
    injectSVGOnDev,
    idify
  };
}

// src/index.ts
function VitePluginSvgSpritemap(iconsPattern, options) {
  const _options = createOptions(options);
  return [
    BuildPlugin(iconsPattern, _options),
    DevPlugin(iconsPattern, _options),
    VuePlugin(iconsPattern, _options)
  ];
}
